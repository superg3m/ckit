This is the steps I must take in order to fix ckit

C-Build was a cool idea, but its not practical.
- [ ] Build System
	- [/] windows_build.ps1 (convient)
	- [ ] unix_build.sh (learn how bash scripts work)

- [x] Transfer ckg to ckit then delete ckg

- [ ] Restructure the project
	- [ ] _test_ckit_string.c
	- [ ] _test_ckit_vector.c
	- [ ] _test_ckit_char.c
	...
	- [x] Remove core folder
	- [x] Unity build for ckit.h/ckit.c

- [ ] Better way to distribute the ckit.lib so I can just download the lib without having to complie it all the time.
	- [ ] This runs into issues because I don't want people to have to do anything to download a lib from github all the time.

- [ ] Memory Tracker (This one is unclear what to do here)
	- [ ] Remove File, line and function

build_windows.ps1 -default(all)|ckit|ckg  (optional)-debug  (optional)-tests
build_posix.sh    -ckit|ckg  (optional)-debug  (optional)-tests
Crank up those warnings (/W4 with cl) and pay attention to them! 
There are a ton of const-incorrectness warnings, too. Also enable sanitizers (/fsanitize=address with cl). 

run_tests.ps1	  -all|ckit|ckg  (optional)-debug
run_tests.sh	  -all|ckit|ckg  (optional)-debug
_test_ckit_string = outputs to file 
Then the program will scan the first character for:
S_ucceeded: function_name
F_ailed: function_name

legit the first thing to do is build out the build scripts and test scripts (LITTERALLY NOTHING CAN BE DONE BEFORE THIS!)
I think I will wnat to rename things to be core or modules
HEY WE ARE BACK BABY!